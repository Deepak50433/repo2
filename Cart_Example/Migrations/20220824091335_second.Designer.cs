// <auto-generated />
using System;
using Cart_Example.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cart_Example.Migrations
{
    [DbContext(typeof(CRContext))]
    [Migration("20220824091335_second")]
    partial class second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cart_Example.Models.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("categid")
                        .HasColumnType("int");

                    b.Property<int>("prodid")
                        .HasColumnType("int");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("categid");

                    b.HasIndex("prodid");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("Cart_Example.Models.Catogery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("catogeries");
                });

            modelBuilder.Entity("Cart_Example.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("categid")
                        .HasColumnType("int");

                    b.Property<bool>("check")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("categid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Cart_Example.Models.Cart", b =>
                {
                    b.HasOne("Cart_Example.Models.Catogery", "categ")
                        .WithMany()
                        .HasForeignKey("categid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cart_Example.Models.Product", "prod")
                        .WithMany()
                        .HasForeignKey("prodid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categ");

                    b.Navigation("prod");
                });

            modelBuilder.Entity("Cart_Example.Models.Product", b =>
                {
                    b.HasOne("Cart_Example.Models.Catogery", "categ")
                        .WithMany()
                        .HasForeignKey("categid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categ");
                });
#pragma warning restore 612, 618
        }
    }
}
